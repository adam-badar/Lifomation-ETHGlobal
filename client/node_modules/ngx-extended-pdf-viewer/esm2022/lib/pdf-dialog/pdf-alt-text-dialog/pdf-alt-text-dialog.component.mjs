import { Component } from '@angular/core';
import * as i0 from "@angular/core";
export class PdfAltTextDialogComponent {
    constructor() { }
    ngOnInit() { }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.11", ngImport: i0, type: PdfAltTextDialogComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.11", type: PdfAltTextDialogComponent, selector: "pdf-alt-text-dialog", ngImport: i0, template: "<dialog id=\"altTextDialog\" aria-labelledby=\"dialogLabel\" aria-describedby=\"dialogDescription\">\n  <div id=\"altTextContainer\">\n    <div id=\"overallDescription\">\n      <span id=\"dialogLabel\" data-l10n-id=\"pdfjs-editor-alt-text-dialog-label\" class=\"title\">Choose an option</span>\n      <span id=\"dialogDescription\" data-l10n-id=\"pdfjs-editor-alt-text-dialog-description\">\n        Alt text (alternative text) helps when people can\u2019t see the image or when it doesn\u2019t load.\n      </span>\n    </div>\n    <div id=\"addDescription\">\n      <div class=\"radio\">\n        <div class=\"radioButton\">\n          <input type=\"radio\" id=\"descriptionButton\" name=\"altTextOption\" aria-describedby=\"descriptionAreaLabel\" checked />\n          <label for=\"descriptionButton\" data-l10n-id=\"pdfjs-editor-alt-text-add-description-label\">Add a description</label>\n        </div>\n        <div class=\"radioLabel\">\n          <span id=\"descriptionAreaLabel\" data-l10n-id=\"pdfjs-editor-alt-text-add-description-description\">\n            Aim for 1-2 sentences that describe the subject, setting, or actions.\n          </span>\n        </div>\n      </div>\n      <div class=\"descriptionArea\">\n        <textarea\n          id=\"descriptionTextarea\"\n          placeholder=\"For example, \u201CA young man sits down at a table to eat a meal\u201D\"\n          aria-labelledby=\"descriptionAreaLabel\"\n          data-l10n-id=\"pdfjs-editor-alt-text-textarea\"\n        ></textarea>\n      </div>\n    </div>\n    <div id=\"markAsDecorative\">\n      <div class=\"radio\">\n        <div class=\"radioButton\">\n          <input type=\"radio\" id=\"decorativeButton\" name=\"altTextOption\" aria-describedby=\"decorativeLabel\" />\n          <label for=\"decorativeButton\" data-l10n-id=\"pdfjs-editor-alt-text-mark-decorative-label\">Mark as decorative</label>\n        </div>\n        <div class=\"radioLabel\">\n          <span id=\"decorativeLabel\" data-l10n-id=\"pdfjs-editor-alt-text-mark-decorative-description\">\n            This is used for ornamental images, like borders or watermarks.\n          </span>\n        </div>\n      </div>\n    </div>\n    <div id=\"buttons\">\n      <button id=\"altTextCancel\"><span data-l10n-id=\"pdfjs-editor-alt-text-cancel-button\">Cancel</span></button>\n      <button id=\"altTextSave\"><span data-l10n-id=\"pdfjs-editor-alt-text-save-button\">Save</span></button>\n    </div>\n  </div>\n</dialog>\n", styles: [""] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.11", ngImport: i0, type: PdfAltTextDialogComponent, decorators: [{
            type: Component,
            args: [{ selector: 'pdf-alt-text-dialog', template: "<dialog id=\"altTextDialog\" aria-labelledby=\"dialogLabel\" aria-describedby=\"dialogDescription\">\n  <div id=\"altTextContainer\">\n    <div id=\"overallDescription\">\n      <span id=\"dialogLabel\" data-l10n-id=\"pdfjs-editor-alt-text-dialog-label\" class=\"title\">Choose an option</span>\n      <span id=\"dialogDescription\" data-l10n-id=\"pdfjs-editor-alt-text-dialog-description\">\n        Alt text (alternative text) helps when people can\u2019t see the image or when it doesn\u2019t load.\n      </span>\n    </div>\n    <div id=\"addDescription\">\n      <div class=\"radio\">\n        <div class=\"radioButton\">\n          <input type=\"radio\" id=\"descriptionButton\" name=\"altTextOption\" aria-describedby=\"descriptionAreaLabel\" checked />\n          <label for=\"descriptionButton\" data-l10n-id=\"pdfjs-editor-alt-text-add-description-label\">Add a description</label>\n        </div>\n        <div class=\"radioLabel\">\n          <span id=\"descriptionAreaLabel\" data-l10n-id=\"pdfjs-editor-alt-text-add-description-description\">\n            Aim for 1-2 sentences that describe the subject, setting, or actions.\n          </span>\n        </div>\n      </div>\n      <div class=\"descriptionArea\">\n        <textarea\n          id=\"descriptionTextarea\"\n          placeholder=\"For example, \u201CA young man sits down at a table to eat a meal\u201D\"\n          aria-labelledby=\"descriptionAreaLabel\"\n          data-l10n-id=\"pdfjs-editor-alt-text-textarea\"\n        ></textarea>\n      </div>\n    </div>\n    <div id=\"markAsDecorative\">\n      <div class=\"radio\">\n        <div class=\"radioButton\">\n          <input type=\"radio\" id=\"decorativeButton\" name=\"altTextOption\" aria-describedby=\"decorativeLabel\" />\n          <label for=\"decorativeButton\" data-l10n-id=\"pdfjs-editor-alt-text-mark-decorative-label\">Mark as decorative</label>\n        </div>\n        <div class=\"radioLabel\">\n          <span id=\"decorativeLabel\" data-l10n-id=\"pdfjs-editor-alt-text-mark-decorative-description\">\n            This is used for ornamental images, like borders or watermarks.\n          </span>\n        </div>\n      </div>\n    </div>\n    <div id=\"buttons\">\n      <button id=\"altTextCancel\"><span data-l10n-id=\"pdfjs-editor-alt-text-cancel-button\">Cancel</span></button>\n      <button id=\"altTextSave\"><span data-l10n-id=\"pdfjs-editor-alt-text-save-button\">Save</span></button>\n    </div>\n  </div>\n</dialog>\n" }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGRmLWFsdC10ZXh0LWRpYWxvZy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtZXh0ZW5kZWQtcGRmLXZpZXdlci9zcmMvbGliL3BkZi1kaWFsb2cvcGRmLWFsdC10ZXh0LWRpYWxvZy9wZGYtYWx0LXRleHQtZGlhbG9nLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1leHRlbmRlZC1wZGYtdmlld2VyL3NyYy9saWIvcGRmLWRpYWxvZy9wZGYtYWx0LXRleHQtZGlhbG9nL3BkZi1hbHQtdGV4dC1kaWFsb2cuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQzs7QUFPbEQsTUFBTSxPQUFPLHlCQUF5QjtJQUNwQyxnQkFBZSxDQUFDO0lBRWhCLFFBQVEsS0FBSSxDQUFDO3dHQUhGLHlCQUF5Qjs0RkFBekIseUJBQXlCLDJEQ1B0QyxzN0VBZ0RBOzs0RkR6Q2EseUJBQXlCO2tCQUxyQyxTQUFTOytCQUNFLHFCQUFxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BkZi1hbHQtdGV4dC1kaWFsb2cnLFxuICB0ZW1wbGF0ZVVybDogJy4vcGRmLWFsdC10ZXh0LWRpYWxvZy5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3BkZi1hbHQtdGV4dC1kaWFsb2cuY29tcG9uZW50LmNzcyddLFxufSlcbmV4cG9ydCBjbGFzcyBQZGZBbHRUZXh0RGlhbG9nQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgY29uc3RydWN0b3IoKSB7fVxuXG4gIG5nT25Jbml0KCkge31cbn1cbiIsIjxkaWFsb2cgaWQ9XCJhbHRUZXh0RGlhbG9nXCIgYXJpYS1sYWJlbGxlZGJ5PVwiZGlhbG9nTGFiZWxcIiBhcmlhLWRlc2NyaWJlZGJ5PVwiZGlhbG9nRGVzY3JpcHRpb25cIj5cbiAgPGRpdiBpZD1cImFsdFRleHRDb250YWluZXJcIj5cbiAgICA8ZGl2IGlkPVwib3ZlcmFsbERlc2NyaXB0aW9uXCI+XG4gICAgICA8c3BhbiBpZD1cImRpYWxvZ0xhYmVsXCIgZGF0YS1sMTBuLWlkPVwicGRmanMtZWRpdG9yLWFsdC10ZXh0LWRpYWxvZy1sYWJlbFwiIGNsYXNzPVwidGl0bGVcIj5DaG9vc2UgYW4gb3B0aW9uPC9zcGFuPlxuICAgICAgPHNwYW4gaWQ9XCJkaWFsb2dEZXNjcmlwdGlvblwiIGRhdGEtbDEwbi1pZD1cInBkZmpzLWVkaXRvci1hbHQtdGV4dC1kaWFsb2ctZGVzY3JpcHRpb25cIj5cbiAgICAgICAgQWx0IHRleHQgKGFsdGVybmF0aXZlIHRleHQpIGhlbHBzIHdoZW4gcGVvcGxlIGNhbuKAmXQgc2VlIHRoZSBpbWFnZSBvciB3aGVuIGl0IGRvZXNu4oCZdCBsb2FkLlxuICAgICAgPC9zcGFuPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgaWQ9XCJhZGREZXNjcmlwdGlvblwiPlxuICAgICAgPGRpdiBjbGFzcz1cInJhZGlvXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJyYWRpb0J1dHRvblwiPlxuICAgICAgICAgIDxpbnB1dCB0eXBlPVwicmFkaW9cIiBpZD1cImRlc2NyaXB0aW9uQnV0dG9uXCIgbmFtZT1cImFsdFRleHRPcHRpb25cIiBhcmlhLWRlc2NyaWJlZGJ5PVwiZGVzY3JpcHRpb25BcmVhTGFiZWxcIiBjaGVja2VkIC8+XG4gICAgICAgICAgPGxhYmVsIGZvcj1cImRlc2NyaXB0aW9uQnV0dG9uXCIgZGF0YS1sMTBuLWlkPVwicGRmanMtZWRpdG9yLWFsdC10ZXh0LWFkZC1kZXNjcmlwdGlvbi1sYWJlbFwiPkFkZCBhIGRlc2NyaXB0aW9uPC9sYWJlbD5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJyYWRpb0xhYmVsXCI+XG4gICAgICAgICAgPHNwYW4gaWQ9XCJkZXNjcmlwdGlvbkFyZWFMYWJlbFwiIGRhdGEtbDEwbi1pZD1cInBkZmpzLWVkaXRvci1hbHQtdGV4dC1hZGQtZGVzY3JpcHRpb24tZGVzY3JpcHRpb25cIj5cbiAgICAgICAgICAgIEFpbSBmb3IgMS0yIHNlbnRlbmNlcyB0aGF0IGRlc2NyaWJlIHRoZSBzdWJqZWN0LCBzZXR0aW5nLCBvciBhY3Rpb25zLlxuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJkZXNjcmlwdGlvbkFyZWFcIj5cbiAgICAgICAgPHRleHRhcmVhXG4gICAgICAgICAgaWQ9XCJkZXNjcmlwdGlvblRleHRhcmVhXCJcbiAgICAgICAgICBwbGFjZWhvbGRlcj1cIkZvciBleGFtcGxlLCDigJxBIHlvdW5nIG1hbiBzaXRzIGRvd24gYXQgYSB0YWJsZSB0byBlYXQgYSBtZWFs4oCdXCJcbiAgICAgICAgICBhcmlhLWxhYmVsbGVkYnk9XCJkZXNjcmlwdGlvbkFyZWFMYWJlbFwiXG4gICAgICAgICAgZGF0YS1sMTBuLWlkPVwicGRmanMtZWRpdG9yLWFsdC10ZXh0LXRleHRhcmVhXCJcbiAgICAgICAgPjwvdGV4dGFyZWE+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGlkPVwibWFya0FzRGVjb3JhdGl2ZVwiPlxuICAgICAgPGRpdiBjbGFzcz1cInJhZGlvXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJyYWRpb0J1dHRvblwiPlxuICAgICAgICAgIDxpbnB1dCB0eXBlPVwicmFkaW9cIiBpZD1cImRlY29yYXRpdmVCdXR0b25cIiBuYW1lPVwiYWx0VGV4dE9wdGlvblwiIGFyaWEtZGVzY3JpYmVkYnk9XCJkZWNvcmF0aXZlTGFiZWxcIiAvPlxuICAgICAgICAgIDxsYWJlbCBmb3I9XCJkZWNvcmF0aXZlQnV0dG9uXCIgZGF0YS1sMTBuLWlkPVwicGRmanMtZWRpdG9yLWFsdC10ZXh0LW1hcmstZGVjb3JhdGl2ZS1sYWJlbFwiPk1hcmsgYXMgZGVjb3JhdGl2ZTwvbGFiZWw+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwicmFkaW9MYWJlbFwiPlxuICAgICAgICAgIDxzcGFuIGlkPVwiZGVjb3JhdGl2ZUxhYmVsXCIgZGF0YS1sMTBuLWlkPVwicGRmanMtZWRpdG9yLWFsdC10ZXh0LW1hcmstZGVjb3JhdGl2ZS1kZXNjcmlwdGlvblwiPlxuICAgICAgICAgICAgVGhpcyBpcyB1c2VkIGZvciBvcm5hbWVudGFsIGltYWdlcywgbGlrZSBib3JkZXJzIG9yIHdhdGVybWFya3MuXG4gICAgICAgICAgPC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICAgIDxkaXYgaWQ9XCJidXR0b25zXCI+XG4gICAgICA8YnV0dG9uIGlkPVwiYWx0VGV4dENhbmNlbFwiPjxzcGFuIGRhdGEtbDEwbi1pZD1cInBkZmpzLWVkaXRvci1hbHQtdGV4dC1jYW5jZWwtYnV0dG9uXCI+Q2FuY2VsPC9zcGFuPjwvYnV0dG9uPlxuICAgICAgPGJ1dHRvbiBpZD1cImFsdFRleHRTYXZlXCI+PHNwYW4gZGF0YS1sMTBuLWlkPVwicGRmanMtZWRpdG9yLWFsdC10ZXh0LXNhdmUtYnV0dG9uXCI+U2F2ZTwvc3Bhbj48L2J1dHRvbj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L2RpYWxvZz5cbiJdfQ==